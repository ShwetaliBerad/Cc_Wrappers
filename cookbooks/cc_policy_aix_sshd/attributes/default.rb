default['cc_policy_aix_sshd']['policy_map'] = {"components" => [
                              {
                               identified_by: 'value',
                               id: 'os:aix',
                               "enforced_by" => [{
                                                policy: 'policy_aix_sshd',
                                                enabled: true}]
                              }

                             ]
                          }
default['cc_policy_aix_sshd']['ui_metadata']['policy_aix_sshd'] = {
               policy:"policy_aix_sshd",
						   display_name:"policy_aix_sshd",
						   techspec:'<b>CSD:</b>NA<br><b>-ITCS:</b>Section 2.2.24(3.1), 2.2.24(5.7), 2.2.24(8)<br>',
						   attributes:[

						   {key:"AcceptEnvWhitelist",
						   type:"string_array",
						   display_name:"AcceptEnvWhitelist",
						   display_type:"string_array",
						   validator:"",
						   units:"",
						   options:"",
						   hint:"Specifies list of regex values for OpenSSH AcceptEnv environment variables which are allowed. It takes precedence over AcceptEnvBlacklist. If a variable match both, it will be kept.",
						   default:[]},

						   {key:"AcceptEnvBlacklist",
						   type:"string_array",
						   display_name:"AcceptEnvBlacklist",
						   display_type:"string_array",
						   validator:"",
						   units:"",
						   options:"",
						   hint:"Specifies list of regex values for OpenSSH AcceptEnv environment variables which are prohibitied. Note \\b is used to define begining and end of word search and \\w* used as a wildcard.",
						   default:['[\\s\\S]*']},

						   {key:"GatewayPorts",
						   type:"text",
						   display_name:"GatewayPorts",
						   display_type:"text_box",
						   validator:"^(?:yes|no|clientspecified)$",
						   units:"",
						   options:"",
						   hint:"Specifies whether remote hosts are allowed to connect to ports forwarded for the client.",
						   default:"no"},

						   {key:"UsePAM",
						   type:"text",
						   display_name:"UsePAM",
						   display_type:"text_box",
						   validator:"^(?:yes|no)$",
						   units:"",
						   options:"",
						   hint:"Enables the Pluggable Authentication Module interface.",
						   default:""},

						   {key:"RestartSshService",
						   type:"text",
						   display_name:"RestartSshService",
						   display_type:"text_box",
						   validator:"^(?:yes|no)$",
						   units:"",
						   options:"",
						   hint:"Specifies whether ssh service should be restarted",
						   default:"yes"},

						   {key:"MACs",
						   type:"text",
						   display_name:"MACs",
						   display_type:"text_box",
						   validator:"",
						   units:"",
						   options:"",
						   hint:"The supported MACs are: hmac-md5, hmac-md5-96, hmac-ripemd160, hmac-sha1, hmac-sha1-96, hmac-sha2-256, hmac-sha2-512, umac-64@openssh.com, umac-128@openssh.com, hmac-md5-etm@openssh.com, hmac-md5-96-etm@openssh.com, hmac-ripemd160-etm@openssh.com, hmac-sha1-etm@openssh.com, hmac-sha1-96-etm@openssh.com, hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, umac-64-etm@openssh.com, umac-128-etm@openssh.com",
						   default:"hmac-sha1,umac-64@openssh.com,hmac-ripemd160,hmac-sha2-256,hmac-sha2-512"},

						   {key:"Ciphers",
						   type:"text",
						   display_name:"Ciphers",
						   display_type:"text_box",
						   validator:"",
						   units:"",
						   options:"",
						   hint:"The supported ciphers are: 3des-cbc, aes128-cbc, aes192-cbc, aes256-cbc, aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, aes256-gcm@openssh.com, arcfour, arcfour128, arcfour256, blowfish-cbc, cast128-cbc, chacha20-poly1305@openssh.com",
						   default:"aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,arcfour"},

						   {key:"HostbasedAuthentication",
						   type:"text",
						   display_name:"HostbasedAuthentication",
						   display_type:"text_box",
						   validator:"^(?:yes|no)$",
						   units:"",
						   options:"",
						   hint:"Specifies whether rhosts or /etc/hosts.equiv authentication together with successful public key client host authentication is allowed.",
						   default:"no"},

						   {key:"IgnoreRhosts",
						   type:"text",
						   display_name:"IgnoreRhosts",
						   display_type:"text_box",
						   validator:"^(?:yes|no)$",
						   units:"",
						   options:"",
						   hint:"Specifies for RhostsRSAAuthentication or HostbasedAuthentication if .rhosts and .shosts files will be ignored (YES) or used (NO)",
						   default:"yes"},

						   {key:"KeyRegenerationInterval",
						   type:"text",
						   display_name:"KeyRegenerationInterval",
						   display_type:"text_box",
						   validator:"^[0-9]+[h|m|s]?$",
						   units:"",
						   options:"",
						   hint:"OpenSSHD Key Regeneration Interval. Values: numeric seconds,  h/m for hours or minutes, or left blank to ignore",
						   default:"1h"},

						   {key:"LoginGraceTime",
						   type:"text",
						   display_name:"LoginGraceTime",
						   display_type:"text_box",
						   validator:"^[0-9]+[h|m|s]?$",
						   units:"",
						   options:"",
						   hint:"The server disconnects after this time if the user has not successfully logged in.  Values: numeric seconds,  h/m for hours or minutes, or left blank to ignore",
						   default:"2m"},

						   {key:"LogLevel",
						   type:"text",
						   display_name:"LogLevel",
						   display_type:"text_box",
						   validator:"",
						   units:"",
						   options:"",
						   hint:"Gives the verbosity level that is used when logging messages from OpenSSHD. Values: QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, and DEBUG3; or left blank to ignore",
						   default:"INFO"},

						   {key:"MaxStartups",
						   type:"text",
						   display_name:"MaxStartups",
						   display_type:"text_box",
						   validator:"[0-9]*",
						   units:"",
						   options:"",
						   hint:"Specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.",
						   default:"10"},

						   {key:"MaxAuthTries",
						   type:"text",
						   display_name:"MaxAuthTries",
						   display_type:"text_box",
						   validator:"[0-9]*",
						   units:"",
						   options:"",
						   hint:"Specifies the maximum number of authentication attempts permitted per connection. Values: numeric or left blank to ignore",
						   default:"5"},

						   {key:"PermitUserEnvironment",
						   type:"text",
						   display_name:"PermitUserEnvironment",
						   display_type:"text_box",
						   validator:"",
						   units:"",
						   options:"",
						   hint:"Specifies whether ~/.ssh/environment and environment= options in ~/.ssh/authorized_keys are processed by sshd.",
						   default:"no"},

						   {key:"PermitRootLogin",
						   type:"text",
						   display_name:"PermitRootLogin",
						   display_type:"text_box",
						   validator:"^(?:yes|no|without-password|forced-commands-only)$",
						   units:"",
						   options:"",
						   hint:"Enables or disables root login via OpenSSH.",
						   default:"no"},

						   {key:"PasswordAuthentication",
						   type:"text",
						   display_name:"PasswordAuthentication",
						   display_type:"text_box",
						   validator:"^(?:yes|no)$",
						   units:"",
						   options:"",
						   hint:"Specifies whether password authentication is allowed.",
						   default:"yes"},

						   {key:"PermitEmptyPasswords",
						   type:"text",
						   display_name:"PermitEmptyPasswords",
						   display_type:"text_box",
						   validator:"^(?:yes|no)$",
						   units:"",
						   options:"",
						   hint:"Enables or disables OpenSSHD to allow blank passwords.",
						   default:"no"},

						   {key:"ChallengeResponseAuthentication",
						   type:"text",
						   display_name:"ChallengeResponseAuthentication",
						   display_type:"text_box",
						   validator:"^(?:yes|no)$",
						   units:"",
						   options:"",
						   hint:"Specifies whether challenge-response authentication is allowed",
						   default:""},

						   {key:"PubkeyAuthentication",
						   type:"text",
						   display_name:"PubkeyAuthentication",
						   display_type:"text_box",
						   validator:"^(?:yes|no)$",
						   units:"",
						   options:"",
						   hint:"Enables or disables OpenSSHD to use Public Key Authentication.",
						   default:"yes"},

						   {key:"Protocol",
						   type:"CSV",
						   display_name:"Protocol",
						   display_type:"csv",
						   validator:"",
						   units:"",
						   options:"",
						   hint:"Specifies the protocol versions OpenSSHD supports. The possible values are 1 and 2. Multiple versions must be comma-separated. Leave blank to ignore",
						   default:"2"},

						   {key:"PrintMotd",
						   type:"text",
						   display_name:"PrintMotd",
						   display_type:"text_box",
						   validator:"^(?:yes|no)$",
						   units:"",
						   options:"",
						   hint:"Indicates if sshd should print the /etc/motd text when a user logs in interactively",
						   default:"yes"},

						   {key:"RSAAuthentication",
						   type:"text",
						   display_name:"RSAAuthentication",
						   display_type:"text_box",
						   validator:"^(?:yes|no)$",
						   units:"",
						   options:"",
						   hint:"Specifies whether pure RSA authentication is allowed.  This option applies to protocol version 1 only.",
						   default:"yes"},

						   {key:"ServerKeyBits",
						   type:"text",
						   display_name:"ServerKeyBits",
						   display_type:"text_box",
						   validator:"[0-9]*",
						   units:"",
						   options:"",
						   hint:"Defines the number of bits in the ephemeral protocol version 1 server key.  Values: numeric bit lenght or left blank to ignore",
						   default:"1024"},

						   {key:"StrictModes",
						   type:"text",
						   display_name:"StrictModes",
						   display_type:"text_box",
						   validator:"^(?:yes|no)$",
						   units:"",
						   options:"",
						   hint:"Enables or disables OpenSSHD strict mode.",
						   default:"yes"},

						   {key:"TCPKeepAlive",
						   type:"text",
						   display_name:"TCPKeepAlive",
						   display_type:"text_box",
						   validator:"^(?:yes|no|ghost)$",
						   units:"",
						   options:"",
						   hint:"Specifies whether the system should send TCP keepalive messages to the other side..",
						   default:"yes"},

						   {key:"X11Forwarding",
						   type:"text",
						   display_name:"X11Forwarding",
						   display_type:"text_box",
						   validator:"^(?:yes|no)$",
						   units:"",
						   options:"",
						   hint:"Specifies whether X11 forwarding is permitted or not",
						   default:"no"},

						   {key:"X11DisplayOffset",
						   type:"text",
						   display_name:"X11DisplayOffset",
						   display_type:"text_box",
						   validator:"[0-9]*",
						   units:"",
						   options:"",
						   hint:"Specifies the first display number available for sshd X11 forwarding",
						   default:"10"},

						   {key:"X11UseLocalhost",
						   type:"text",
						   display_name:"X11UseLocalhost",
						   display_type:"text_box",
						   validator:"^(?:yes|no|localhost)$",
						   units:"",
						   options:"",
						   hint:"Specifies whether sshd should bind the X11 forwarding server to the loopback address (yes) or to the wildcard address (no)",
						   default:"yes"},

						   {key:"XAuthLocation",
						   type:"text",
						   display_name:"XAuthLocation",
						   display_type:"text_box",
						   validator:"",
						   units:"",
						   options:"",
						   hint:"Specifies the full path and name of the xauth(1) program.",
						   default:"/usr/bin/X11/xauth"},

						   {key: "optional_params",
						   display_name: "Optional Parameters",
						   type: "string_array",
						   display_type: "string_array",
						   validator: "",
						   units: "",
						   options: "",
						   hint: "Optional Parameters",
						   default: ['HostbasedAuthentication', 'RSAAuthentication', 'TCPKeepAlive', 'LoginGraceTime', 'MaxStartups', 'MaxAuthTries', 'KeyRegenerationInterval', 'Protocol', 'GatewayPorts', 'ServerKeyBits', 'PasswordAuthentication', 'PubkeyAuthentication', 'IgnoreRhosts', 'PrintMotd', 'X11Forwarding', 'X11DisplayOffset', 'X11UseLocalhost', 'XAuthLocation', 'AcceptEnv']
						   },

						   {key: "enforce_optional_params",
						   display_name: "Enforce Optional Params",
						   type: "boolean",
						   display_type: "single_select",
						   validator: "^(?i)(true|false)$",
						   units: "",
						   options: "[{\"key\": \"true\", \"value\": \"true\"}, {\"key\": \"false\", \"value\": \"false\"}",
						   hint: "Optional Params flag to enable/disable configuration of parameters - ['HostbasedAuthentication', 'RSAAuthentication', 'TCPKeepAlive', 'LoginGraceTime', 'MaxStartups', 'MaxAuthTries', 'KeyRegenerationInterval', 'Protocol', 'GatewayPorts', 'ServerKeyBits', 'PasswordAuthentication', 'PubkeyAuthentication', 'IgnoreRhosts', 'PrintMotd', 'X11Forwarding', 'X11DisplayOffset', 'X11UseLocalhost', 'XAuthLocation', 'AcceptEnv']",
						   default: false
						   },

						   {key:"OsrPossibleDirs",
						   type:"string_array",
						   display_name:"OsrPossibleDirs",
						   display_type:"string_array",
						   validator:"",
						   units:"",
						   options:"",
						   hint:"SSHD OSR file (config file) possbile directories. Each directory will combine with every filename in OsrPossibleFiles to generate file path. If the file has 'write' permission for 'others', that 'write' permission will be removed (if the file is not in the OsrWhitelist).",
						   default:['/opt/freeware', '/usr', '/usr/local', '/usr/openssh', '/usr/ssh']},

						   {key:"OsrPossibleFiles",
						   type:"string_array",
						   display_name:"OsrPossibleFiles",
						   display_type:"string_array",
						   validator:"",
						   units:"",
						   options:"",
						   hint:"SSHD OSR file (config file) possible names. Each filename will be combined with every directory in OsrPossibleDirs to generate file path. For example, if OsrPossibleDirs is ['/dir1', '/dir2'], and OsrPossibleFiles is ['f1', 'f2', 'f3'], their combination will have 6 files: /dir1/f1, /dir1/f2, /dir1/f3, /dir2/f1, /dir2/f2, /dir2/f3. And all the above files will be checked if it exists. If the file has 'write' permission for 'others', that 'write' permission will be removed (if the file is not in the OsrWhitelist).",
						   default:[
						     'bin/openssl',            'bin/scp',              'bin/scp2',             'bin/sftp',
						     'bin/sftp2',              'bin/sftp-server',      'bin/sftp-server2',     'bin/slogin',
						     'bin/ssh',                'bin/ssh2',             'bin/ssh-add',          'bin/ssh-add2',
						     'bin/ssh-agent',          'bin/ssh-agent2',       'bin/ssh-askpass',      'bin/ssh-askpass2',
						     'bin/ssh-certenroll2',    'bin/ssh-chrootmgr',    'bin/ssh-dummy-shell',  'bin/ssh-keygen',
						     'bin/ssh-keygen2',        'bin/ssh-keyscan',      'bin/ssh-pam-client',   'bin/ssh-probe',
						     'bin/ssh-probe2',         'bin/ssh-pubkeymgr',    'bin/ssh-signer',       'bin/ssh-signer2',
						     'lib/libcrypto.a',        'lib/libssh.a',         'lib/libssl.a',         'lib/libz.a',
						     'lib-exec/openssh/sftp-server',   'lib-exec/openssh/ssh-keysign',     'lib-exec/openssh/ssh-askpass',
						     'lib-exec/sftp-server',           'lib-exec/ssh-keysign',             'lib-exec/ssh-rand-helper',
						     'libexec/openssh/sftp-server',    'libexec/openssh/ssh-keysign',      'libexec/openssh/ssh-askpass',
						     'libexec/sftp-server',            'libexec/ssh-keysign',              'libexec/ssh-rand-helper',
						     'sbin/sshd',                      'sbin/sshd2',                       'sbin/sshd-check-conf',
							 'lib/ssh/sshd',                   'lib/ssh/ssh-keysign']},

						   {key:"OsrConfigs",
						   type:"string_array",
						   display_name:"OsrConfigs",
						   display_type:"string_array",
						   validator:"",
						   units:"",
						   options:"",
						   hint:"SSHD OSR file (config file) list. The files in the list must have full path. If the file has 'write' permission for 'others', that 'write' permission will be removed (if the file is not in the OsrWhitelist).",
						   default:[
						     '/etc/openssh/sshd_config',       '/etc/ssh/sshd_config',             '/etc/ssh/sshd2_config',
						     '/etc/ssh2/sshd_config',          '/etc/ssh2/sshd2_config',            '/etc/sshd_config',
						     '/etc/sshd2_config',              '/usr/local/etc/sshd_config',       '/usr/local/etc/sshd2_config',
							 '/lib/svc/method/sshd']},

						   {key:"OsrWhitelist",
						   type:"string_array",
						   display_name:"OsrWhitelist",
						   display_type:"string_array",
						   validator:"",
						   units:"",
						   options:"",
						   hint:"SSHD OSR file (config file) whitelist. Files in the list will be ignored during the permission checking.",
						   default:[]}


							],
                            "validator"=>"",
                            "units"=>"",
                            "hint"=>""
							}
